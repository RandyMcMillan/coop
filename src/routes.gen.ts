/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as InboxRelaysImport } from './routes/inbox-relays'
import { Route as BootstrapRelaysImport } from './routes/bootstrap-relays'
import { Route as IndexImport } from './routes/index'
import { Route as AuthNewImport } from './routes/auth/new'
import { Route as AuthImportImport } from './routes/auth/import'
import { Route as AuthConnectImport } from './routes/auth/connect'
import { Route as AccountLayoutImport } from './routes/$account/_layout'
import { Route as AccountLayoutContactsImport } from './routes/$account/_layout/contacts'
import { Route as AccountLayoutChatsIdImport } from './routes/$account/_layout/chats.$id'

// Create Virtual Routes

const AccountImport = createFileRoute('/$account')()
const ResetLazyImport = createFileRoute('/reset')()
const NewLazyImport = createFileRoute('/new')()
const AccountLayoutChatsLazyImport = createFileRoute(
  '/$account/_layout/chats',
)()
const AccountLayoutChatsNewLazyImport = createFileRoute(
  '/$account/_layout/chats/new',
)()

// Create/Update Routes

const AccountRoute = AccountImport.update({
  id: '/$account',
  path: '/$account',
  getParentRoute: () => rootRoute,
} as any)

const ResetLazyRoute = ResetLazyImport.update({
  id: '/reset',
  path: '/reset',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/reset.lazy').then((d) => d.Route))

const NewLazyRoute = NewLazyImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/new.lazy').then((d) => d.Route))

const InboxRelaysRoute = InboxRelaysImport.update({
  id: '/inbox-relays',
  path: '/inbox-relays',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/inbox-relays.lazy').then((d) => d.Route))

const BootstrapRelaysRoute = BootstrapRelaysImport.update({
  id: '/bootstrap-relays',
  path: '/bootstrap-relays',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/bootstrap-relays.lazy').then((d) => d.Route),
)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AuthNewRoute = AuthNewImport.update({
  id: '/auth/new',
  path: '/auth/new',
  getParentRoute: () => rootRoute,
} as any)

const AuthImportRoute = AuthImportImport.update({
  id: '/auth/import',
  path: '/auth/import',
  getParentRoute: () => rootRoute,
} as any)

const AuthConnectRoute = AuthConnectImport.update({
  id: '/auth/connect',
  path: '/auth/connect',
  getParentRoute: () => rootRoute,
} as any)

const AccountLayoutRoute = AccountLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AccountRoute,
} as any)

const AccountLayoutChatsLazyRoute = AccountLayoutChatsLazyImport.update({
  id: '/chats',
  path: '/chats',
  getParentRoute: () => AccountLayoutRoute,
} as any).lazy(() =>
  import('./routes/$account/_layout/chats.lazy').then((d) => d.Route),
)

const AccountLayoutContactsRoute = AccountLayoutContactsImport.update({
  id: '/contacts',
  path: '/contacts',
  getParentRoute: () => AccountLayoutRoute,
} as any).lazy(() =>
  import('./routes/$account/_layout/contacts.lazy').then((d) => d.Route),
)

const AccountLayoutChatsNewLazyRoute = AccountLayoutChatsNewLazyImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => AccountLayoutChatsLazyRoute,
} as any).lazy(() =>
  import('./routes/$account/_layout/chats.new.lazy').then((d) => d.Route),
)

const AccountLayoutChatsIdRoute = AccountLayoutChatsIdImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => AccountLayoutChatsLazyRoute,
} as any).lazy(() =>
  import('./routes/$account/_layout/chats.$id.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/bootstrap-relays': {
      id: '/bootstrap-relays'
      path: '/bootstrap-relays'
      fullPath: '/bootstrap-relays'
      preLoaderRoute: typeof BootstrapRelaysImport
      parentRoute: typeof rootRoute
    }
    '/inbox-relays': {
      id: '/inbox-relays'
      path: '/inbox-relays'
      fullPath: '/inbox-relays'
      preLoaderRoute: typeof InboxRelaysImport
      parentRoute: typeof rootRoute
    }
    '/new': {
      id: '/new'
      path: '/new'
      fullPath: '/new'
      preLoaderRoute: typeof NewLazyImport
      parentRoute: typeof rootRoute
    }
    '/reset': {
      id: '/reset'
      path: '/reset'
      fullPath: '/reset'
      preLoaderRoute: typeof ResetLazyImport
      parentRoute: typeof rootRoute
    }
    '/$account': {
      id: '/$account'
      path: '/$account'
      fullPath: '/$account'
      preLoaderRoute: typeof AccountImport
      parentRoute: typeof rootRoute
    }
    '/$account/_layout': {
      id: '/$account/_layout'
      path: '/$account'
      fullPath: '/$account'
      preLoaderRoute: typeof AccountLayoutImport
      parentRoute: typeof AccountRoute
    }
    '/auth/connect': {
      id: '/auth/connect'
      path: '/auth/connect'
      fullPath: '/auth/connect'
      preLoaderRoute: typeof AuthConnectImport
      parentRoute: typeof rootRoute
    }
    '/auth/import': {
      id: '/auth/import'
      path: '/auth/import'
      fullPath: '/auth/import'
      preLoaderRoute: typeof AuthImportImport
      parentRoute: typeof rootRoute
    }
    '/auth/new': {
      id: '/auth/new'
      path: '/auth/new'
      fullPath: '/auth/new'
      preLoaderRoute: typeof AuthNewImport
      parentRoute: typeof rootRoute
    }
    '/$account/_layout/contacts': {
      id: '/$account/_layout/contacts'
      path: '/contacts'
      fullPath: '/$account/contacts'
      preLoaderRoute: typeof AccountLayoutContactsImport
      parentRoute: typeof AccountLayoutImport
    }
    '/$account/_layout/chats': {
      id: '/$account/_layout/chats'
      path: '/chats'
      fullPath: '/$account/chats'
      preLoaderRoute: typeof AccountLayoutChatsLazyImport
      parentRoute: typeof AccountLayoutImport
    }
    '/$account/_layout/chats/$id': {
      id: '/$account/_layout/chats/$id'
      path: '/$id'
      fullPath: '/$account/chats/$id'
      preLoaderRoute: typeof AccountLayoutChatsIdImport
      parentRoute: typeof AccountLayoutChatsLazyImport
    }
    '/$account/_layout/chats/new': {
      id: '/$account/_layout/chats/new'
      path: '/new'
      fullPath: '/$account/chats/new'
      preLoaderRoute: typeof AccountLayoutChatsNewLazyImport
      parentRoute: typeof AccountLayoutChatsLazyImport
    }
  }
}

// Create and export the route tree

interface AccountLayoutChatsLazyRouteChildren {
  AccountLayoutChatsIdRoute: typeof AccountLayoutChatsIdRoute
  AccountLayoutChatsNewLazyRoute: typeof AccountLayoutChatsNewLazyRoute
}

const AccountLayoutChatsLazyRouteChildren: AccountLayoutChatsLazyRouteChildren =
  {
    AccountLayoutChatsIdRoute: AccountLayoutChatsIdRoute,
    AccountLayoutChatsNewLazyRoute: AccountLayoutChatsNewLazyRoute,
  }

const AccountLayoutChatsLazyRouteWithChildren =
  AccountLayoutChatsLazyRoute._addFileChildren(
    AccountLayoutChatsLazyRouteChildren,
  )

interface AccountLayoutRouteChildren {
  AccountLayoutContactsRoute: typeof AccountLayoutContactsRoute
  AccountLayoutChatsLazyRoute: typeof AccountLayoutChatsLazyRouteWithChildren
}

const AccountLayoutRouteChildren: AccountLayoutRouteChildren = {
  AccountLayoutContactsRoute: AccountLayoutContactsRoute,
  AccountLayoutChatsLazyRoute: AccountLayoutChatsLazyRouteWithChildren,
}

const AccountLayoutRouteWithChildren = AccountLayoutRoute._addFileChildren(
  AccountLayoutRouteChildren,
)

interface AccountRouteChildren {
  AccountLayoutRoute: typeof AccountLayoutRouteWithChildren
}

const AccountRouteChildren: AccountRouteChildren = {
  AccountLayoutRoute: AccountLayoutRouteWithChildren,
}

const AccountRouteWithChildren =
  AccountRoute._addFileChildren(AccountRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/bootstrap-relays': typeof BootstrapRelaysRoute
  '/inbox-relays': typeof InboxRelaysRoute
  '/new': typeof NewLazyRoute
  '/reset': typeof ResetLazyRoute
  '/$account': typeof AccountLayoutRouteWithChildren
  '/auth/connect': typeof AuthConnectRoute
  '/auth/import': typeof AuthImportRoute
  '/auth/new': typeof AuthNewRoute
  '/$account/contacts': typeof AccountLayoutContactsRoute
  '/$account/chats': typeof AccountLayoutChatsLazyRouteWithChildren
  '/$account/chats/$id': typeof AccountLayoutChatsIdRoute
  '/$account/chats/new': typeof AccountLayoutChatsNewLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/bootstrap-relays': typeof BootstrapRelaysRoute
  '/inbox-relays': typeof InboxRelaysRoute
  '/new': typeof NewLazyRoute
  '/reset': typeof ResetLazyRoute
  '/$account': typeof AccountLayoutRouteWithChildren
  '/auth/connect': typeof AuthConnectRoute
  '/auth/import': typeof AuthImportRoute
  '/auth/new': typeof AuthNewRoute
  '/$account/contacts': typeof AccountLayoutContactsRoute
  '/$account/chats': typeof AccountLayoutChatsLazyRouteWithChildren
  '/$account/chats/$id': typeof AccountLayoutChatsIdRoute
  '/$account/chats/new': typeof AccountLayoutChatsNewLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/bootstrap-relays': typeof BootstrapRelaysRoute
  '/inbox-relays': typeof InboxRelaysRoute
  '/new': typeof NewLazyRoute
  '/reset': typeof ResetLazyRoute
  '/$account': typeof AccountRouteWithChildren
  '/$account/_layout': typeof AccountLayoutRouteWithChildren
  '/auth/connect': typeof AuthConnectRoute
  '/auth/import': typeof AuthImportRoute
  '/auth/new': typeof AuthNewRoute
  '/$account/_layout/contacts': typeof AccountLayoutContactsRoute
  '/$account/_layout/chats': typeof AccountLayoutChatsLazyRouteWithChildren
  '/$account/_layout/chats/$id': typeof AccountLayoutChatsIdRoute
  '/$account/_layout/chats/new': typeof AccountLayoutChatsNewLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/bootstrap-relays'
    | '/inbox-relays'
    | '/new'
    | '/reset'
    | '/$account'
    | '/auth/connect'
    | '/auth/import'
    | '/auth/new'
    | '/$account/contacts'
    | '/$account/chats'
    | '/$account/chats/$id'
    | '/$account/chats/new'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/bootstrap-relays'
    | '/inbox-relays'
    | '/new'
    | '/reset'
    | '/$account'
    | '/auth/connect'
    | '/auth/import'
    | '/auth/new'
    | '/$account/contacts'
    | '/$account/chats'
    | '/$account/chats/$id'
    | '/$account/chats/new'
  id:
    | '__root__'
    | '/'
    | '/bootstrap-relays'
    | '/inbox-relays'
    | '/new'
    | '/reset'
    | '/$account'
    | '/$account/_layout'
    | '/auth/connect'
    | '/auth/import'
    | '/auth/new'
    | '/$account/_layout/contacts'
    | '/$account/_layout/chats'
    | '/$account/_layout/chats/$id'
    | '/$account/_layout/chats/new'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BootstrapRelaysRoute: typeof BootstrapRelaysRoute
  InboxRelaysRoute: typeof InboxRelaysRoute
  NewLazyRoute: typeof NewLazyRoute
  ResetLazyRoute: typeof ResetLazyRoute
  AccountRoute: typeof AccountRouteWithChildren
  AuthConnectRoute: typeof AuthConnectRoute
  AuthImportRoute: typeof AuthImportRoute
  AuthNewRoute: typeof AuthNewRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BootstrapRelaysRoute: BootstrapRelaysRoute,
  InboxRelaysRoute: InboxRelaysRoute,
  NewLazyRoute: NewLazyRoute,
  ResetLazyRoute: ResetLazyRoute,
  AccountRoute: AccountRouteWithChildren,
  AuthConnectRoute: AuthConnectRoute,
  AuthImportRoute: AuthImportRoute,
  AuthNewRoute: AuthNewRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/bootstrap-relays",
        "/inbox-relays",
        "/new",
        "/reset",
        "/$account",
        "/auth/connect",
        "/auth/import",
        "/auth/new"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/bootstrap-relays": {
      "filePath": "bootstrap-relays.tsx"
    },
    "/inbox-relays": {
      "filePath": "inbox-relays.tsx"
    },
    "/new": {
      "filePath": "new.lazy.tsx"
    },
    "/reset": {
      "filePath": "reset.lazy.tsx"
    },
    "/$account": {
      "filePath": "$account",
      "children": [
        "/$account/_layout"
      ]
    },
    "/$account/_layout": {
      "filePath": "$account/_layout.tsx",
      "parent": "/$account",
      "children": [
        "/$account/_layout/contacts",
        "/$account/_layout/chats"
      ]
    },
    "/auth/connect": {
      "filePath": "auth/connect.tsx"
    },
    "/auth/import": {
      "filePath": "auth/import.tsx"
    },
    "/auth/new": {
      "filePath": "auth/new.tsx"
    },
    "/$account/_layout/contacts": {
      "filePath": "$account/_layout/contacts.tsx",
      "parent": "/$account/_layout"
    },
    "/$account/_layout/chats": {
      "filePath": "$account/_layout/chats.lazy.tsx",
      "parent": "/$account/_layout",
      "children": [
        "/$account/_layout/chats/$id",
        "/$account/_layout/chats/new"
      ]
    },
    "/$account/_layout/chats/$id": {
      "filePath": "$account/_layout/chats.$id.tsx",
      "parent": "/$account/_layout/chats"
    },
    "/$account/_layout/chats/new": {
      "filePath": "$account/_layout/chats.new.lazy.tsx",
      "parent": "/$account/_layout/chats"
    }
  }
}
ROUTE_MANIFEST_END */
