/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as BootstrapRelaysImport } from './routes/bootstrap-relays'
import { Route as IndexImport } from './routes/index'
import { Route as AuthNewImport } from './routes/auth/new'
import { Route as AuthImportImport } from './routes/auth/import'
import { Route as AuthConnectImport } from './routes/auth/connect'
import { Route as AccountRelaysImport } from './routes/$account.relays'
import { Route as AccountContactsImport } from './routes/$account.contacts'
import { Route as AccountChatsIdImport } from './routes/$account.chats.$id'

// Create Virtual Routes

const ResetLazyImport = createFileRoute('/reset')()
const NewLazyImport = createFileRoute('/new')()
const AccountChatsLazyImport = createFileRoute('/$account/chats')()
const AccountChatsNewLazyImport = createFileRoute('/$account/chats/new')()

// Create/Update Routes

const ResetLazyRoute = ResetLazyImport.update({
  path: '/reset',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/reset.lazy').then((d) => d.Route))

const NewLazyRoute = NewLazyImport.update({
  path: '/new',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/new.lazy').then((d) => d.Route))

const BootstrapRelaysRoute = BootstrapRelaysImport.update({
  path: '/bootstrap-relays',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/bootstrap-relays.lazy').then((d) => d.Route),
)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AccountChatsLazyRoute = AccountChatsLazyImport.update({
  path: '/$account/chats',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/$account.chats.lazy').then((d) => d.Route),
)

const AuthNewRoute = AuthNewImport.update({
  path: '/auth/new',
  getParentRoute: () => rootRoute,
} as any)

const AuthImportRoute = AuthImportImport.update({
  path: '/auth/import',
  getParentRoute: () => rootRoute,
} as any)

const AuthConnectRoute = AuthConnectImport.update({
  path: '/auth/connect',
  getParentRoute: () => rootRoute,
} as any)

const AccountRelaysRoute = AccountRelaysImport.update({
  path: '/$account/relays',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/$account.relays.lazy').then((d) => d.Route),
)

const AccountContactsRoute = AccountContactsImport.update({
  path: '/$account/contacts',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/$account.contacts.lazy').then((d) => d.Route),
)

const AccountChatsNewLazyRoute = AccountChatsNewLazyImport.update({
  path: '/new',
  getParentRoute: () => AccountChatsLazyRoute,
} as any).lazy(() =>
  import('./routes/$account.chats.new.lazy').then((d) => d.Route),
)

const AccountChatsIdRoute = AccountChatsIdImport.update({
  path: '/$id',
  getParentRoute: () => AccountChatsLazyRoute,
} as any).lazy(() =>
  import('./routes/$account.chats.$id.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/bootstrap-relays': {
      id: '/bootstrap-relays'
      path: '/bootstrap-relays'
      fullPath: '/bootstrap-relays'
      preLoaderRoute: typeof BootstrapRelaysImport
      parentRoute: typeof rootRoute
    }
    '/new': {
      id: '/new'
      path: '/new'
      fullPath: '/new'
      preLoaderRoute: typeof NewLazyImport
      parentRoute: typeof rootRoute
    }
    '/reset': {
      id: '/reset'
      path: '/reset'
      fullPath: '/reset'
      preLoaderRoute: typeof ResetLazyImport
      parentRoute: typeof rootRoute
    }
    '/$account/contacts': {
      id: '/$account/contacts'
      path: '/$account/contacts'
      fullPath: '/$account/contacts'
      preLoaderRoute: typeof AccountContactsImport
      parentRoute: typeof rootRoute
    }
    '/$account/relays': {
      id: '/$account/relays'
      path: '/$account/relays'
      fullPath: '/$account/relays'
      preLoaderRoute: typeof AccountRelaysImport
      parentRoute: typeof rootRoute
    }
    '/auth/connect': {
      id: '/auth/connect'
      path: '/auth/connect'
      fullPath: '/auth/connect'
      preLoaderRoute: typeof AuthConnectImport
      parentRoute: typeof rootRoute
    }
    '/auth/import': {
      id: '/auth/import'
      path: '/auth/import'
      fullPath: '/auth/import'
      preLoaderRoute: typeof AuthImportImport
      parentRoute: typeof rootRoute
    }
    '/auth/new': {
      id: '/auth/new'
      path: '/auth/new'
      fullPath: '/auth/new'
      preLoaderRoute: typeof AuthNewImport
      parentRoute: typeof rootRoute
    }
    '/$account/chats': {
      id: '/$account/chats'
      path: '/$account/chats'
      fullPath: '/$account/chats'
      preLoaderRoute: typeof AccountChatsLazyImport
      parentRoute: typeof rootRoute
    }
    '/$account/chats/$id': {
      id: '/$account/chats/$id'
      path: '/$id'
      fullPath: '/$account/chats/$id'
      preLoaderRoute: typeof AccountChatsIdImport
      parentRoute: typeof AccountChatsLazyImport
    }
    '/$account/chats/new': {
      id: '/$account/chats/new'
      path: '/new'
      fullPath: '/$account/chats/new'
      preLoaderRoute: typeof AccountChatsNewLazyImport
      parentRoute: typeof AccountChatsLazyImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  BootstrapRelaysRoute,
  NewLazyRoute,
  ResetLazyRoute,
  AccountContactsRoute,
  AccountRelaysRoute,
  AuthConnectRoute,
  AuthImportRoute,
  AuthNewRoute,
  AccountChatsLazyRoute: AccountChatsLazyRoute.addChildren({
    AccountChatsIdRoute,
    AccountChatsNewLazyRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/bootstrap-relays",
        "/new",
        "/reset",
        "/$account/contacts",
        "/$account/relays",
        "/auth/connect",
        "/auth/import",
        "/auth/new",
        "/$account/chats"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/bootstrap-relays": {
      "filePath": "bootstrap-relays.tsx"
    },
    "/new": {
      "filePath": "new.lazy.tsx"
    },
    "/reset": {
      "filePath": "reset.lazy.tsx"
    },
    "/$account/contacts": {
      "filePath": "$account.contacts.tsx"
    },
    "/$account/relays": {
      "filePath": "$account.relays.tsx"
    },
    "/auth/connect": {
      "filePath": "auth/connect.tsx"
    },
    "/auth/import": {
      "filePath": "auth/import.tsx"
    },
    "/auth/new": {
      "filePath": "auth/new.tsx"
    },
    "/$account/chats": {
      "filePath": "$account.chats.lazy.tsx",
      "children": [
        "/$account/chats/$id",
        "/$account/chats/new"
      ]
    },
    "/$account/chats/$id": {
      "filePath": "$account.chats.$id.tsx",
      "parent": "/$account/chats"
    },
    "/$account/chats/new": {
      "filePath": "$account.chats.new.lazy.tsx",
      "parent": "/$account/chats"
    }
  }
}
ROUTE_MANIFEST_END */
